---
title: "Kh·ªüi t·∫°o ƒë·ªëi t∆∞·ª£ng v·ªõi t·ª´ kh√≥a new trong javascript c√≥ t√°c d·ª•ng g√¨"
description: "Trong h∆∞·ªõng d·∫´n n√†y, m√¨nh s·∫Ω gi√∫p b·∫°n t√¨m hi·ªÉu v·ªÅ c√°ch s·ª≠ d·ª•ng t·ª´ kh√≥a new ƒë·ªÉ t·∫°o m·ªôt ƒë·ªëi t∆∞·ª£ng."
keywords: [
"ƒë·ªëi t∆∞·ª£ng trong javascript",
"object trong javascript",
"t·ª´ kh√≥a New trong Javascript",
"new trong javascript",
"new in javascript",
"tu khoa new trong javascript l√† g√¨",
"cach su dung tu khoa new trong javascript",
"t·ª´ kh√≥a new trong javascript c√≥ t√°c d·ª•ng g√¨",
"t·ª´ kh√≥a new trong javascript c∆° b·∫£n",
"t·ª´ kh√≥a new trong javascript nghƒ©a l√† g√¨"
]
chapter:
  name: "Object trong Javascript"
  slug: "chuong-03-object-trong-javascript"
category:
  name: "Javascript"
  slug: "javascript"
image: https://kungfutech.edu.vn/thumbnail.png
position: 7
---

Trong c√°c b√†i vi·∫øt tr∆∞·ªõc, m√¨nh ch·ªß y·∫øu d√πng c√∫ ph√°p `{...}` ƒë·ªÉ [kh·ªüi t·∫°o object](/bai-viet/javascript/object-la-gi-object-trong-javascript/). Tuy nhi√™n, c√°ch n√†y ch·ªâ d√πng ƒë·ªÉ **kh·ªüi t·∫°o m·ªôt object ri√™ng l·∫ª**.

N·∫øu m√¨nh mu·ªën kh·ªüi t·∫°o **nhi·ªÅu object t∆∞∆°ng t·ª± nhau** th√¨ sao?

ƒê·ªÉ gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ n√†y, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng to√°n t·ª≠ `new` trong JavaScript k·∫øt h·ª£p v·ªõi m·ªôt [h√†m](/bai-viet/javascript/ham-trong-javascript/) kh·ªüi t·∫°o.

## H√†m kh·ªüi t·∫°o v√† new trong JavaScript l√† g√¨?

H√†m kh·ªüi t·∫°o v·ªÅ b·∫£n ch·∫•t l√† **m·ªôt h√†m b√¨nh th∆∞·ªùng**, nh∆∞ng d√πng ƒë·ªÉ **kh·ªüi t·∫°o object**.

M·ªôt s·ªë ƒë·∫∑c ƒëi·ªÉm c·ªßa h√†m kh·ªüi t·∫°o l√†:

- H√†m kh·ªüi t·∫°o th∆∞·ªùng ƒë∆∞·ª£c **vi·∫øt hoa ch·ªØ c√°i ƒë·∫ßu** (kh√¥ng b·∫Øt bu·ªôc) ƒë·ªÉ d·ªÖ d√†ng ph√¢n bi·ªát v·ªõi c√°c h√†m b√¨nh th∆∞·ªùng.
- H√†m kh·ªüi t·∫°o **ch·ªâ n√™n s·ª≠ d·ª•ng** v·ªõi to√°n t·ª≠ `new` trong JavaScript.

V√≠ d·ª•:

```js
function Point(x, y) {
  this.x = x;
  this.y = y;
}

let root = new Point(0, 0);
console.log(root.x, root.y); // 0 0
```

Khi m·ªôt h√†m ƒë∆∞·ª£c g·ªçi v·ªõi to√°n t·ª≠ `new`, JavaScript Engine s·∫Ω x·ª≠ l√Ω c√°c b∆∞·ªõc nh∆∞ sau:

1.  Kh·ªüi t·∫°o object r·ªóng v√† g√°n cho [`this`](/bai-viet/javascript/this-trong-javascript/).
2.  C√°c c√¢u l·ªánh trong th√¢n h√†m ƒë∆∞·ª£c th·ª±c thi, th∆∞·ªùng l√† c·∫≠p nh·∫≠t `this` ho·∫∑c th√™m c√°c thu·ªôc t√≠nh cho `this`.
3.  Tr·∫£ v·ªÅ gi√° tr·ªã c·ªßa `this`.

N√≥i c√°ch kh√°c, c√∫ ph√°p `new Point(...)` th·ª±c hi·ªán:

```js
function Point(x, y) {
  // this = {}; // ng·∫ßm ƒë·ªãnh kh·ªüi t·∫°o object r·ªóng
  this.x = x;
  this.y = y;

  // return this; // ng·∫ßm ƒë·ªãnh tr·∫£ v·ªÅ this}
}
```

Nh∆∞ v·∫≠y, `new Point(0,0)` t∆∞∆°ng ƒë∆∞∆°ng v·ªõi c√°ch kh·ªüi t·∫°o object l√†:

```js
let root = {
  x: 0,
  y: 0,
};
```

B√¢y gi·ªù, n·∫øu b·∫°n mu·ªën t·∫°o ra c√°c **point** kh√°c, b·∫°n ch·ªâ c·∫ßn g·ªçi `new p1(1, 2)`, `new p2(2, 3)`,... thay v√¨ ph·∫£i s·ª≠ d·ª•ng c√∫ ph√°p `{...}` nhi·ªÅu l·∫ßn (v√† d√†i d√≤ng h∆°n).

<content-warning>

üìù **Ch√∫ √Ω:**

**M·ª•c ƒë√≠ch ch√≠nh c·ªßa h√†m kh·ªüi t·∫°o** l√† ƒë·ªÉ d·ªÖ d√†ng **t√°i s·ª≠ d·ª•ng code**.

[Arrow function](/bai-viet/javascript/arrow-function-trong-javascript) kh√¥ng c√≥ `this` n√™n kh√¥ng ƒë∆∞·ª£c d√πng l√†m h√†m kh·ªüi t·∫°o.

</content-warning>

N·∫øu h√†m kh·ªüi t·∫°o kh√¥ng c√≥ tham s·ªë th√¨ b·∫°n c√≥ th·ªÉ b·ªè qua c·∫∑p d·∫•u ngo·∫∑c ƒë∆°n `()`, v√≠ d·ª•:

```js
function Point() {
  this.x = 0;
  this.y = 0;
}

let root = new Point();
console.log(root.x, root.y); // 0
```

> Tuy nhi√™n, m√¨nh khuy√™n b·∫°n n√™n s·ª≠ d·ª•ng c√°ch g·ªçi h√†m kh·ªüi t·∫°o v·ªõi c·∫∑p d·∫•u ngo·∫∑c ƒë∆°n `()`, v√¨ n√≥ chu·∫©n h∆°n v√† **ƒë√∫ng v·ªõi c√∫ ph√°p g·ªçi h√†m**.

B·∫°n c√≥ th·ªÉ khai b√°o, ƒë·ªìng th·ªùi kh·ªüi t·∫°o object ngay v·ªõi c√∫ ph√°p `new function(){...}` nh∆∞ sau:

```js
let root = new (function () {
  this.x = 1;
  this.y = 2;

  /*
   * Code x·ª≠ l√Ω kh√°c t·∫°i ƒë√¢y
   */
})();

console.log(root.x, root.y); // 1 2
```

C√∫ ph√°p n√†y g·ªçi l√† [IFFE](https://en.wikipedia.org/wiki/Immediately_invoked_function_expression).

Khi t·∫°o object theo c√°ch n√†y, h√†m kh·ªüi t·∫°o s·∫Ω ch·ªâ ƒë∆∞·ª£c g·ªçi m·ªôt l·∫ßn (v√¨ b·∫£n ch·∫•t h√†m kh·ªüi t·∫°o **kh√¥ng ƒë∆∞·ª£c l∆∞u v√†o bi·∫øn n√†o**).

V√¨ v·∫≠y, m·ª•c ƒë√≠ch c·ªßa c√°ch khai b√°o n√†y **kh√¥ng ph·∫£i ƒë·ªÉ t√°i s·ª≠ d·ª•ng**, m√† ƒë·ªÉ ƒë√≥ng g√≥i code li√™n quan trong m·ªôt h√†m kh·ªüi t·∫°o.

## Ki·ªÉm tra h√†m kh·ªüi t·∫°o ƒë∆∞·ª£c g·ªçi v·ªõi new trong JavaScript

ƒê·ªÉ ki·ªÉm tra h√†m kh·ªüi t·∫°o c√≥ ƒë∆∞·ª£c g·ªçi v·ªõi new trong JavaScript hay kh√¥ng, b·∫°n s·ª≠ d·ª•ng thu·ªôc t√≠nh ƒë·∫∑c bi·ªát l√† `new.target`.

N·∫øu h√†m ƒë∆∞·ª£c g·ªçi theo c√°ch th√¥ng th∆∞·ªùng th√¨ `new.target` s·∫Ω b·∫±ng `undefined`, ng∆∞·ª£c l·∫°i `new.target` b·∫±ng ch√≠nh function:

```js
function Point() {
  console.log(new.target);
}

Point(); // undefined
new Point(); // ∆í Point() { console.log(new.target); }
```

Thu·ªôc t√≠nh ƒë·∫∑c bi·ªát n√†y c√≥ th·ªÉ ƒë∆∞·ª£c √°p d·ª•ng ƒë·ªÉ ki·ªÉm tra xem h√†m kh·ªüi t·∫°o c√≥ ƒë∆∞·ª£c g·ªçi v·ªõi `new` hay kh√¥ng.

Tr∆∞·ªùng h·ª£p h√†m kh·ªüi t·∫°o kh√¥ng ƒë∆∞·ª£c g·ªçi v·ªõi `new`, m√¨nh c√≥ th·ªÉ x·ª≠ l√Ω th√™m ƒë·ªÉ tr·∫£ v·ªÅ gi·ªëng c√°ch g·ªçi h√†m v·ªõi `new`:

```js
function Point(x, y) {
  if (!new.target) {
    return new Point(x, y);
  }
  this.x = x;
  this.y = y;
}

let root = Point(0, 0);
console.log(root.x, root.y); // 0 0
```

V·ªõi c√°ch vi·∫øt nh∆∞ n√†y, b·∫°n c√≥ th·ªÉ kh·ªüi t·∫°o object v·ªõi `new` ho·∫∑c kh√¥ng c√≥ `new` th√¨ ƒë·ªÅu cho k·∫øt qu·∫£ gi·ªëng nhau.

<content-warning>

üí° **Ch√∫ √Ω:**

`new.target` √≠t ƒë∆∞·ª£c s·ª≠ d·ª•ng trong th·ª±c t·∫ø.

Vi·ªác kh·ªüi t·∫°o object **n√™n lu√¥n lu√¥n s·ª≠ d·ª•ng t·ª´ kh√≥a `new`** ƒë·ªÉ ƒë·∫£m b·∫£o code r√µ r√†ng v√† d·ªÖ hi·ªÉu nh·∫•t.

</content-warning>

## Tr·∫£ v·ªÅ gi√° tr·ªã t·ª´ h√†m kh·ªüi t·∫°o

Th√¥ng th∆∞·ªùng, h√†m kh·ªüi t·∫°o kh√¥ng c√≥ t·ª´ kh√≥a `return` v√¨ JavaScript Engine ng·∫ßm ƒë·ªãnh s·∫Ω tr·∫£ v·ªÅ `this`. Tuy nhi√™n, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng `return` trong h√†m kh·ªüi t·∫°o v·ªõi quy t·∫Øc nh∆∞ sau:

- N·∫øu `return` ƒë∆∞·ª£c g·ªçi v·ªõi **object** th√¨ gi√° tr·ªã tr·∫£ v·ªÅ c·ªßa h√†m kh·ªüi t·∫°o l√† object ch·ª© kh√¥ng ph·∫£i `this`.
- N·∫øu `return` ƒë∆∞·ª£c g·ªçi v·ªõi gi√° tr·ªã nguy√™n th·ªßy, `return` s·∫Ω b·ªã b·ªè qua.

N√≥i c√°ch kh√°c, `return` v·ªõi m·ªôt object s·∫Ω tr·∫£ v·ªÅ object ƒë√≥, ng∆∞·ª£c l·∫°i th√¨ tr·∫£ v·ªÅ `this`.

V√≠ d·ª• h√†m kh·ªüi t·∫°o tr·∫£ v·ªÅ m·ªôt object kh√°c `this`:

```js
function Point(x, y) {
  this.x = x;
  this.y = y;

  return { x: 100, y: 100 }; // tr·∫£ v·ªÅ object n√†y thay v√¨ this}
}

let p = new Point(0, 0);
console.log(p.x, p.y); // 100 100
```

V√≠ d·ª• h√†m kh·ªüi t·∫°o tr·∫£ v·ªÅ gi√° tr·ªã nguy√™n th·ªßy:

```js
function Point(x, y) {
  this.x = x;
  this.y = y;

  return 1; // return tr·∫£ v·ªÅ gi√° tr·ªã nguy√™n th·ªßy b·ªã b·ªè qua}
}
let p = new Point(0, 0);
console.log(p.x, p.y); // 0 0
```

## ƒê·ªãnh nghƒ©a ph∆∞∆°ng th·ª©c trong h√†m kh·ªüi t·∫°o

Object kh√¥ng ch·ªâ c√≥ thu·ªôc t√≠nh m√† c√≤n c√≥ c·∫£ [ph∆∞∆°ng th·ª©c](/bai-viet/javascript/phuong-thuc-trong-javascript/).

V√† dƒ© nhi√™n, b·∫°n c√≥ th·ªÉ **ƒë·ªãnh nghƒ©a ph∆∞∆°ng th·ª©c trong h√†m kh·ªüi t·∫°o** c·ªßa object, v√≠ d·ª•:

```js
function Point(x, y) {
  this.x = x;
  this.y = y;

  this.printLog = function () {
    console.log(this.x, this.y);
  };
}

let root = new Point(0, 0);
root.printLog(); // 0 0
```

ƒê·ªÉ t·∫°o nhi·ªÅu object ph·ª©c t·∫°p h∆°n, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng c√∫ ph√°p n√¢ng cao h∆°n nh∆∞ **prototype** hay **class** (s·∫Ω ƒë∆∞·ª£c gi·ªõi thi·ªáu sau).

## T·ªïng k·∫øt

Sau ƒë√¢y l√† nh·ªØng ki·∫øn th·ª©c c∆° b·∫£n c·∫ßn nh·ªõ v·ªÅ kh·ªüi t·∫°o object v·ªõi to√°n t·ª≠ `new` trong JavaScript:

- H√†m kh·ªüi t·∫°o l√† m·ªôt h√†m th√¥ng th∆∞·ªùng nh∆∞ng ƒë∆∞·ª£c d√πng ƒë·ªÉ kh·ªüi t·∫°o object.
- H√†m kh·ªüi t·∫°o th∆∞·ªùng vi·∫øt hoa ch·ªØ c√°i ƒë·∫ßu ti√™n.
- H√†m kh·ªüi t·∫°o ch·ªâ n√™n s·ª≠ d·ª•ng v·ªõi to√°n t·ª≠ `new`. Khi ƒë√≥, JavaScript ng·∫ßm ƒë·ªãnh t·∫°o ra m·ªôt object r·ªóng ·ªü ƒë·∫ßu h√†m v√† g√°n cho `this`. Sau ƒë√≥, cu·ªëi h√†m s·∫Ω `return` v·ªÅ `this`.
- Arrow function kh√¥ng c√≥ `this` n√™n kh√¥ng ƒë∆∞·ª£c d√πng l√†m h√†m kh·ªüi t·∫°o.
- B·∫°n c√≥ th·ªÉ khai b√°o v√† g·ªçi h√†m ngay l·∫≠p t·ª©c v·ªõi c√∫ ph√°p IFFE `new function(){...}`
- Th∆∞·ªùng h√†m kh·ªüi t·∫°o kh√¥ng c√≥ `return`. N·∫øu h√†m kh·ªüi t·∫°o c√≥ `return` th√¨ quy t·∫Øc l√†: `return` v·ªõi m·ªôt object s·∫Ω tr·∫£ v·ªÅ object ƒë√≥, ng∆∞·ª£c l·∫°i th√¨ tr·∫£ v·ªÅ `this`.
- B·∫°n c√≥ th·ªÉ ƒë·ªãnh nghƒ©a ph∆∞∆°ng th·ª©c trong h√†m kh·ªüi t·∫°o.

## Th·ª±c h√†nh

### B√†i 1

Cho ƒëo·∫°n code sau:

```js
function A() { ... }
    function B() { ... }

    let a = new A;
    let b = new B;

    console.log(a === b); // true
```

C√≥ c√°ch n√†o ƒë·ªÉ t·∫°o h√†m `A` v√† `B` sao cho `new A() === new B()`?

Xem ƒë√°p √°n

ƒê√°p √°n l√†: **C√≥**.

ƒê·ªÉ `new A() === new B()` l√† `true` th√¨ h√†m kh·ªüi t·∫°o `A` v√† `B` ph·∫£i tr·∫£ v·ªÅ c√πng m·ªôt object.

```js
let obj = {};
function A() {
  return obj;
}
function B() {
  return obj;
}
let a = new A();
let b = new B();

console.log(a === b); // true
```

### B√†i 2

Vi·∫øt h√†m kh·ªüi t·∫°o object `Calculator` v·ªõi ba ph∆∞∆°ng th·ª©c:

- `read()`: s·ª≠ d·ª•ng h√†m [`prompt`](/bai-viet/javascript/ham-tuong-tac-voi-nguoi-dung-alert-confirm-prompt/) ƒë·ªçc hai gi√° tr·ªã v√† l∆∞u v√†o hai thu·ªôc t√≠nh c·ªßa object (gi·∫£ s·ª≠ ng∆∞·ªùi d√πng nh·∫≠p v√†o l√† s·ªë).
- `add()`: tr·∫£ v·ªÅ t·ªïng c·ªßa hai s·ªë ƒë√£ nh·∫≠p.
- `mul()`: tr·∫£ v·ªÅ t√≠ch c·ªßa hai s·ªë ƒë√£ nh·∫≠p.

V√≠ d·ª•:

```js
let calculator = new Calculator();
calculator.read();
console.log(calculator.sum());
console.log(calculator.mul());
```

Xem ƒë√°p √°n

```js
function Calculator() {
  // Ph∆∞∆°ng th·ª©c read()
  this.read = function () {
    this.a = +prompt("Nh·∫≠p v√†o s·ªë a:", 0);
    this.b = +prompt("Nh·∫≠p v√†o s·ªë b:", 0);
  };

  // Ph∆∞∆°ng th·ª©c add()
  this.add = function () {
    return this.a + this.b;
  };

  // Ph∆∞∆°ng th·ª©c mul()
  this.mul = function () {
    return this.a * this.b;
  };
}

let calculator = new Calculator();
calculator.read();
console.log(calculator.add());
console.log(calculator.mul());
```

**Ch√∫ √Ω:** h√†m `prompt` tr·∫£ v·ªÅ k·∫øt qu·∫£ l√† string. V√¨ v·∫≠y, m√¨nh th√™m to√°n t·ª≠ `+` ƒë·∫±ng tr∆∞·ªõc ƒë·ªÉ [chuy·ªÉn ƒë·ªïi ki·ªÉu d·ªØ li·ªáu](/bai-viet/javascript/chuyen-doi-kieu-du-lieu-trong-javascript/) v·ªÅ number, tr∆∞·ªõc khi g√°n cho `this.a` v√† `this.b`.

### B√†i 3

Vi·∫øt h√†m kh·ªüi t·∫°o `Counter(startValue)` (gi·∫£ s·ª≠ `startValue` l√† s·ªë).

Object t·∫°o ra c√≥ nh·ªØng ƒë·∫∑c ƒëi·ªÉm sau:

- Gi√° tr·ªã `startValue` ƒë∆∞·ª£c l∆∞u v√†o thu·ªôc t√≠nh `value`.
- Ph∆∞∆°ng th·ª©c `read()` s·ª≠ d·ª•ng h√†m `prompt()` ƒë·ªÉ y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p v√†o m·ªôt s·ªë. Sau ƒë√≥, gi√° tr·ªã s·ªë ng∆∞·ªùi d√πng nh·∫≠p s·∫Ω ƒë∆∞·ª£c c·ªông d·ªìn v√†o thu·ªôc t√≠nh `value`.

V√≠ d·ª•:

```js
let counter = new Counter(1);

counter.read();
counter.read();

console.log(counter.value); // gi√° tr·ªã hi·ªán t·∫°i c·ªßa value
```

Xem ƒë√°p √°n

```js
function Counter(startValue) {
  this.value = startValue;

  this.read = function () {
    this.value += +prompt("Nh·∫≠p v√†o m·ªôt s·ªë:", 0);
  };
}

let counter = new Counter(1);

counter.read();
counter.read();

console.log(counter.value); // gi√° tr·ªã hi·ªán t·∫°i c·ªßa value
```
